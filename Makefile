# Makefile para RV Contabilidade Backend

.PHONY: help run build test clean docs api-test install dev all

# ConfiguraÃ§Ãµes
BINARY_NAME=rvcontabilidade
GO=go

help: ## Mostrar ajuda
	@echo "RV Contabilidade Backend - Comandos DisponÃ­veis:"
	@echo "================================================"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## Instalar dependÃªncias
	@echo "ï¿½ Instalando dependÃªncias..."
	$(GO) mod download
	$(GO) mod tidy

run: ## Executar aplicaÃ§Ã£o em modo desenvolvimento
	@echo "ðŸš€ Iniciando servidor de desenvolvimento..."
	$(GO) run main.go

build: ## Compilar aplicaÃ§Ã£o
	@echo "ðŸ”¨ Compilando aplicaÃ§Ã£o..."
	$(GO) build -o bin/$(BINARY_NAME) main.go
	@echo "âœ… BinÃ¡rio criado: bin/$(BINARY_NAME)"

test: ## Executar testes
	@echo "ðŸ§ª Executando testes..."
	$(GO) test -v ./...

docs: ## Gerar documentaÃ§Ã£o Swagger
	@echo "ðŸ“š Gerando documentaÃ§Ã£o Swagger..."
	swag init -g main.go --output ./docs
	@echo "âœ… DocumentaÃ§Ã£o gerada em: http://localhost:8080/swagger/index.html"

api-test: ## Testar API completa
	@echo "ðŸ§ª Testando API..."
	chmod +x test-api.sh
	./test-api.sh

clean: ## Limpar arquivos gerados
	@echo "ï¿½ Limpando arquivos gerados..."
	rm -rf bin/
	rm -f $(BINARY_NAME)

dev: install docs run ## Configurar ambiente de desenvolvimento

all: clean build docs ## Executar pipeline completa
